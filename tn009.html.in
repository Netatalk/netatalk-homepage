<div id="content">
<h1>[TN#009] Netatalk and ZFS nbmand property</h1>

<dl>
<dt><strong>Author</strong></dt>
<dd>Ralph BÃ¶hme</dd>
<dt><strong>Published date</strong></dt>
<dd>April 17, 2012</dd>
</dl>

<p>Running the Netatalk test-suite with a volume on a ZFS set with ZFS property nbmand set to on causes nearly all tests to fail. The reason is (and it&#8217;s something Oracle hides well under the covers): it modifies POSIX semantics up to a point that POSIX compliant applications fail left and right.</p>
<p>We&#8217;ve written and attached a small C program which demonstrates the effect. It opens a file in read/write mode, then forks a child process and in the child process tries to rename the file.</p>
<p>Expected result on a POSIX conforming platform: success.<br/>
Actual result with nbmand=on: permission denied.</p>
<p>Usage:<br/>
$ gcc -o nbmand-demo nbmand-demo.c<br/>
$ cd /path/zfs-set/with/nbmand=off<br/>
$ touch file<br/>
$ /path/to/nbmand-demo file<br/>
&#8230; success &#8230;<br/>
$ cd /path/zfs-set/with/nbmand=on<br/>
$ touch file<br/>
$ /path/to/nbmand-demo file<br/>
&#8230; failure &#8230;</p>
<p>Therefor it is necessary to turn nbmand to off on any ZFS dataset you use for Netatalk AFP volumes.</p>
<p><a href="https://web.archive.org/web/20160423174948/http://www.netafp.com/wp-content/uploads/nbmand-demo.c">nbmand-demo</a></p>
